// Generated by CoffeeScript 1.3.3
(function() {
  var Bar, Curve, Histogram, Range, Scaler;

  Range = this.Vizz.Core.Range;

  Curve = this.Vizz.Core.Curve;

  Scaler = this.Vizz.Core.Scaler;

  Bar = this.Vizz.Primitive.Bar;

  Histogram = (function() {

    Histogram.prototype.CONFIG = {
      curve: new Curve((function() {
        return 0;
      }), 'CARTESIAN', new Range(-6, 6), 0.01),
      range: new Range(-220, 220)
    };

    function Histogram(raw_data, renderer, config) {
      this.raw_data = raw_data;
      this.renderer = renderer;
      this.setConfig(config, this.CONFIG);
      this.onCurve();
    }

    Histogram.prototype.process = function() {
      var i, stops;
      stops = this.CONFIG.curve.stops(this.raw_data.length);
      this.CONFIG.curve.scale(stops, this.CONFIG.range);
      return this.render_data = (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = this.raw_data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push({
            pos: stops[i],
            val: this.raw_data[i]
          });
        }
        return _results;
      }).call(this);
    };

    Histogram.prototype.render = function() {
      var i, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.render_data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(this.renderer.add(new Bar(this.render_data[i].val, this.render_data[i].pos)));
      }
      return _results;
    };

    Histogram.prototype.onCurve = function() {
      this.process();
      return this.render();
    };

    Histogram.prototype.setConfig = function(user_config, default_config) {
      var key, val, _results;
      _results = [];
      for (key in user_config) {
        val = user_config[key];
        if (default_config.hasOwnProperty(key)) {
          _results.push(default_config[key] = user_config[key]);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return Histogram;

  })();

  this.Vizz.Graphics.Histogram = Histogram;

}).call(this);
