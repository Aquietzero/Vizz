// Generated by CoffeeScript 1.3.3
(function() {
  var Bar, Curve, Graph, Histogram, Range, Scaler,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Range = this.Vizz.Core.Range;

  Curve = this.Vizz.Core.Curve;

  Scaler = this.Vizz.Core.Scaler;

  Bar = this.Vizz.Primitive.Bar;

  Graph = this.Vizz.Graphics.Graph;

  Histogram = (function(_super) {

    __extends(Histogram, _super);

    Histogram.prototype.CONFIG = {
      basic: null,
      curve: new Curve((function() {
        return 0;
      }), 'CARTESIAN', new Range(-6, 6), 0.01),
      range: new Range(-220, 220)
    };

    function Histogram(raw_data, renderer, config) {
      this.raw_data = raw_data;
      this.renderer = renderer;
      this.setConfig(config, this.CONFIG);
      Histogram.__super__.constructor.call(this);
      this.onCurve();
    }

    Histogram.prototype.process = function() {
      var i, stops;
      stops = this.CONFIG.curve.stops(this.raw_data.length);
      this.CONFIG.curve.scale(stops, this.CONFIG.range);
      return this.render_data = (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = this.raw_data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push({
            pos: stops[i],
            val: this.raw_data[i]
          });
        }
        return _results;
      }).call(this);
    };

    Histogram.prototype.render = function() {
      var bar, i, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.render_data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        bar = new Bar(this.render_data[i].val, this.render_data[i].pos, this.CONFIG.basic);
        this.graph_data.push(bar);
        _results.push(this.renderer.add(bar));
      }
      return _results;
    };

    return Histogram;

  })(Graph);

  this.Vizz.Graphics.Histogram = Histogram;

}).call(this);
