// Generated by CoffeeScript 1.3.3
(function() {
  var Bar, Graph, Histogram3D, Range, Rect, Scaler, Surface,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Range = this.Vizz.Core.Range;

  Rect = this.Vizz.Core.Rect;

  Surface = this.Vizz.Core.Surface;

  Scaler = this.Vizz.Core.Scaler;

  Bar = this.Vizz.Primitive.Bar;

  Graph = this.Vizz.Graphics.Graph;

  Histogram3D = (function(_super) {

    __extends(Histogram3D, _super);

    Histogram3D.prototype.CONFIG = {
      surface: new Surface((function() {
        return 0;
      }), new Rect(new Range(-250, 250), new Range(-250, 250))),
      rect: new Rect(new Range(-250, 250), new Range(-250, 250))
    };

    function Histogram3D(raw_data, renderer, config) {
      this.raw_data = raw_data;
      this.renderer = renderer;
      this.setConfig(config, this.CONFIG);
      Histogram3D.__super__.constructor.call(this);
      this.onSurface();
    }

    Histogram3D.prototype.process = function() {
      var i, j, stops, _i, _ref, _results;
      stops = this.CONFIG.surface.stops(this.raw_data.length, this.raw_data[0].length);
      this.render_data = [];
      _results = [];
      for (i = _i = 0, _ref = this.raw_data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push((function() {
          var _j, _ref1, _results1;
          _results1 = [];
          for (j = _j = 0, _ref1 = this.raw_data[0].length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
            _results1.push(this.render_data.push({
              pos: stops[i * this.raw_data[0].length + j],
              val: this.raw_data[i][j]
            }));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    Histogram3D.prototype.render = function() {
      var bar, i, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.render_data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        bar = new Bar(this.render_data[i].val, this.render_data[i].pos, {
          radius: 20
        });
        this.graph_data.push(bar);
        _results.push(this.renderer.add(bar));
      }
      return _results;
    };

    Histogram3D.prototype.onSurface = function() {
      this.process();
      return this.render();
    };

    return Histogram3D;

  })(Graph);

  this.Vizz.Graphics.Histogram3D = Histogram3D;

}).call(this);
