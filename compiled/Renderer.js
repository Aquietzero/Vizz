// Generated by CoffeeScript 1.3.3
(function() {
  var Mouse, Renderer;

  Mouse = this.Vizz.EventHandler.Mouse;

  Renderer = (function() {

    function Renderer(container) {
      this.container = container;
      this.width = window.innerWidth;
      this.height = window.innerHeight;
      this.initThree();
      this.initScene();
      this.initCamera();
      this.initLight();
      this.initControls();
      this.objects = [];
      this.initMouseEvents();
    }

    Renderer.prototype.initThree = function() {
      this.renderer = new THREE.WebGLRenderer({
        antialias: true
      });
      this.renderer.setSize(this.width, this.height);
      document.getElementById(this.container).appendChild(this.renderer.domElement);
      this.renderer.setClearColorHex(0x000000, 1.0);
      this.renderer.shadowMapEnabled = true;
      return this.renderer.shadowMapSoft = true;
    };

    Renderer.prototype.initScene = function() {
      return this.scene = new THREE.Scene();
    };

    Renderer.prototype.initCamera = function() {
      this.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 0.01, 1e10);
      this.camera.position.set(500, 800, 500);
      this.camera.up.set(0, 1, 0);
      this.camera.lookAt({
        x: 0,
        y: 150,
        z: 0
      });
      return this.scene.add(this.camera);
    };

    Renderer.prototype.initLight = function() {
      var ambientLight, directionalLight;
      directionalLight = new THREE.DirectionalLight(0xffffff, 1.0);
      directionalLight.position.set(50, 100, 200);
      directionalLight.castShadow = true;
      directionalLight.shadowBias = -0.00022;
      directionalLight.shadowDarkness = 0.5;
      directionalLight.shadowMapWidth = 1024;
      directionalLight.shadowMapHeight = 1024;
      ambientLight = new THREE.AmbientLight(0x111111, 0.1);
      this.scene.add(directionalLight);
      return this.scene.add(ambientLight);
    };

    Renderer.prototype.initControls = function() {
      this.controls = new THREE.TrackballControls(this.camera);
      this.controls.rotateSpeed = 1.0;
      this.controls.zoomSpeed = 1.3;
      this.controls.panSpeed = 0.8;
      return this.controls.keys = [65, 83, 68];
    };

    Renderer.prototype.add = function(obj) {
      this.objects.push(obj);
      return this.scene.add(obj.getGeometry());
    };

    Renderer.prototype.render = function() {
      this.controls.update();
      this.renderer.clear();
      return this.renderer.render(this.scene, this.camera);
    };

    Renderer.prototype.initMouseEvents = function() {
      this.mouseHandler = new Mouse(this);
      this.renderer.domElement.addEventListener('mousemove', this.mouseHandler.onMouseMove, false);
      this.renderer.domElement.addEventListener('mousedown', this.mouseHandler.onMouseDown, false);
      return this.renderer.domElement.addEventListener('mouseup', this.mouseHandler.onMouseUp, false);
    };

    return Renderer;

  })();

  this.Vizz.Renderer = Renderer;

}).call(this);
