// Generated by CoffeeScript 1.3.3
(function() {
  var Coordinate, Curve, Distance, Range, Scaler;

  Range = Vizz.Core.Range;

  Scaler = Vizz.Core.Scaler;

  Distance = Vizz.Core.Distance;

  Coordinate = Vizz.Core.Coordinate;

  Curve = (function() {

    function Curve(func, type, range, accuracy) {
      this.func = func;
      this.type = type;
      this.range = range;
      this.accuracy = accuracy;
      this.scaler = Scaler.getScaler(this.type);
      this.distance = Distance.getDistance(this.type);
      this.coordinate = Coordinate.getCoordinate(this.type);
    }

    Curve.prototype.scale = function(positions, world_range) {
      return this.scaler(positions, this.range, world_range);
    };

    Curve.prototype.length = function() {
      var len, x;
      len = 0;
      x = this.range.begin;
      while (x < this.range.end) {
        len += this.distance(0, this.func(x), this.accuracy, this.func(x + this.accuracy));
        x += this.accuracy;
      }
      return len;
    };

    Curve.prototype.stops = function(n) {
      var counter, len, step, stops, x;
      len = 0;
      counter = 0;
      x = this.range.begin;
      step = this.length() / n;
      stops = [];
      while (counter < n) {
        if (len >= step) {
          len = 0;
          stops.push(this.coordinate(x, this.func(x)));
          counter++;
        }
        len += this.distance(0, this.func(x), this.accuracy, this.func(x + this.accuracy));
        x += this.accuracy;
      }
      return stops;
    };

    Curve.prototype.boundingRect = function() {
      var x, y, z_max, z_min;
      z_max = -Infinity;
      z_min = Infinity;
      x = this.range.begin;
      while (x < this.range.end) {
        y = this.func(x);
        if (y > z_max) {
          z_max = y;
        }
        if (y < z_min) {
          z_min = y;
        }
        x += this.accuracy;
      }
      return {
        x: this.range,
        z: new Range(z_min, z_max)
      };
    };

    return Curve;

  })();

  this.Vizz.Core.Curve = Curve;

}).call(this);
