// Generated by CoffeeScript 1.3.3
(function() {
  var Geometry, Segment,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Geometry = this.Vizz.Primitive.Geometry;

  Segment = (function(_super) {

    __extends(Segment, _super);

    Segment.prototype.CONFIG = {
      color: 0xffff00,
      opacity: 0.8,
      radius: 2,
      offset: 10
    };

    function Segment(begin, end, config) {
      this.setConfig(config, this.CONFIG);
      this.p = begin;
      this.dir = end.sub(begin);
      this.len = this.dir.magnitude();
      this.pos = this.p.add(this.dir.mul(0.5));
    }

    Segment.prototype.dotted = function() {
      var i, p, pos, step, _i, _results;
      this.geometry = new THREE.Object3D;
      step = this.len / this.CONFIG.offset;
      _results = [];
      for (i = _i = 0; 0 <= step ? _i < step : _i > step; i = 0 <= step ? ++_i : --_i) {
        pos = this.p.add(this.dir.mul(i * this.CONFIG.offset / this.len));
        p = new THREE.Mesh(new THREE.SphereGeometry(this.CONFIG.radius, 30, 30), new THREE.MeshLambertMaterial({
          color: this.CONFIG.color,
          opacity: this.CONFIG.opacity
        }));
        p.position.set(pos.x, pos.y, pos.z);
        _results.push(this.geometry.add(p));
      }
      return _results;
    };

    Segment.prototype.solid = function() {
      this.geometry = new THREE.Mesh(new THREE.CylinderGeometry(this.CONFIG.radius, this.CONFIG.radius, this.len, 50, 50, true), new THREE.MeshLambertMaterial({
        color: this.CONFIG.color,
        opacity: this.CONFIG.opacity
      }));
      this.setOrientation(this.dir);
      return this.setPosition(this.pos);
    };

    return Segment;

  })(Geometry);

  this.Vizz.Primitive.Segment = Segment;

}).call(this);
