// Generated by CoffeeScript 1.3.3
(function() {
  var EventHandler,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  EventHandler = (function() {

    function EventHandler(subject) {
      this.subject = subject;
      this.bind = __bind(this.bind, this);

    }

    EventHandler.prototype.bind = function(event, attrs) {
      var _this = this;
      return this.subject[event] = (function(attrs) {
        return function() {
          var attr, val, _base, _name, _results;
          _results = [];
          for (attr in attrs) {
            val = attrs[attr];
            _results.push(typeof (_base = _this.subject)[_name = 'set' + attr] === "function" ? _base[_name](val) : void 0);
          }
          return _results;
        };
      })(attrs);
    };

    EventHandler.prototype.triggered = function(event) {
      var _base;
      return typeof (_base = this.subject)[event] === "function" ? _base[event]() : void 0;
    };

    return EventHandler;

  })();

  this.Vizz.EventHandler.EventHandler = EventHandler;

}).call(this);
